@page "/charting/trendline-blazor"

<TelerikRootComponent>

    <TelerikChart>
        <ChartPannable Enabled="true" Lock="@ChartAxisLock.Y"></ChartPannable>
        <ChartZoomable Enabled="true"></ChartZoomable>
        <ChartLegend Visible="true" Position="@ChartLegendPosition.Bottom"></ChartLegend>
        <ChartTooltip Visible="true" Shared="true"></ChartTooltip>

        <ChartSeriesItems>
            <ChartSeries Type="ChartSeriesType.ScatterLine"
                         Name="Stock Price Trend"
                         Data="@ChartData"
                         XField="@nameof(StockPriceTrend.NumericPeriod)"
                         YField="@nameof(StockPriceTrend.Price)">
            </ChartSeries>

            <ChartSeries Type="ChartSeriesType.LinearTrendline"
                         Name="Stock Price Linear Trendline"
                         For="Stock Price Trend"
                         Color="blue">
                <ChartSeriesTrendline>
                    <ChartSeriesTrendlineForecast Before="0" After="10"></ChartSeriesTrendlineForecast>
                </ChartSeriesTrendline>
            </ChartSeries>

            <ChartSeries Type="ChartSeriesType.MovingAverageTrendline"
                         Name="Stock Price Moving Average Trendline"
                         For="Stock Price Trend"
                         Color="red">
                <ChartSeriesTrendline>
                    <ChartSeriesTrendline Period="5"></ChartSeriesTrendline>
                </ChartSeriesTrendline>
            </ChartSeries>
        </ChartSeriesItems>

        <ChartYAxes>
            <ChartYAxis>
                <ChartYAxisTitle Text="Price"></ChartYAxisTitle>
                <ChartYAxisLabels Format="C0"></ChartYAxisLabels>
            </ChartYAxis>
        </ChartYAxes>
    </TelerikChart>

</TelerikRootComponent>
@code {
    private List<StockPriceTrend> ChartData { get; set; }

    protected override Task OnInitializedAsync()
    {
        ChartData = GetTrendlineData();

        return base.OnInitializedAsync();
    }

    private List<StockPriceTrend> GetTrendlineData()
    {
        return new List<StockPriceTrend>()
        {
            new StockPriceTrend()
            {
                Period = "Q1 2019",
                NumericPeriod = 10,
                Date = new DateTime(2019, 1, 1),
                Price = 10.28m
            },
            new StockPriceTrend()
            {
                Period = "Q2 2019",
                NumericPeriod = 20,
                Date = new DateTime(2019, 4, 1),
                Price = 20.54m
            },
            new StockPriceTrend()
            {
                Period = "Q3 2019",
                NumericPeriod = 30,
                Date = new DateTime(2019, 7, 1),
                Price = 29.33m
            },
            new StockPriceTrend()
            {
                Period = "Q4 2019",
                NumericPeriod = 40,
                Date = new DateTime(2019, 10, 1),
                Price = 69.81m
            },
            new StockPriceTrend()
            {
                Period = "Q1 2020",
                NumericPeriod = 50,
                Date = new DateTime(2020, 1, 1),
                Price = 45.5m
            },
            new StockPriceTrend()
            {
                Period = "Q2 2020",
                NumericPeriod = 60,
                Date = new DateTime(2020, 4, 1),
                Price = 57.54m
            },
            new StockPriceTrend()
            {
                Period = "Q3 2020",
                NumericPeriod = 70,
                Date = new DateTime(2020, 7, 1),
                Price = 68.3m
            },
            new StockPriceTrend()
            {
                Period = "Q4 2020",
                NumericPeriod = 80,
                Date = new DateTime(2020, 10, 1),
                Price = 70.73m
            },
            new StockPriceTrend()
            {
                Period = "Q1 2021",
                NumericPeriod = 90,
                Date = new DateTime(2021, 1, 1),
                Price = 68.15m
            },
            new StockPriceTrend()
            {
                Period = "Q2 2021",
                NumericPeriod = 100,
                Date = new DateTime(2021, 4, 1),
                Price = 76.24m
            },
            new StockPriceTrend()
            {
                Period = "Q3 2021",
                NumericPeriod = 110,
                Date = new DateTime(2021, 7, 1),
                Price = 52.3m
            },
            new StockPriceTrend()
            {
                Period = "Q4 2021",
                NumericPeriod = 120,
                Date = new DateTime(2021, 10, 1),
                Price = 75.73m
            },
            new StockPriceTrend()
            {
                Period = "Q1 2022",
                NumericPeriod = 130,
                Date = new DateTime(2022, 1, 1),
                Price = 84.25m
            },
            new StockPriceTrend()
            {
                Period = "Q2 2022",
                NumericPeriod = 140,
                Date = new DateTime(2022, 4, 1),
                Price = 85.4m
            },
            new StockPriceTrend()
            {
                Period = "Q3 2022",
                NumericPeriod = 150,
                Date = new DateTime(2022, 7, 1),
                Price = 79.93m
            },
            new StockPriceTrend()
            {
                Period = "Q4 2022",
                NumericPeriod = 160,
                Date = new DateTime(2022, 10, 1),
                Price = 80.76m
            },
            new StockPriceTrend()
            {
                Period = "Q1 2023",
                NumericPeriod = 170,
                Date = new DateTime(2023, 1, 1),
                Price = 128.36m
            },
        };
    }

    private class StockPriceTrend
    {
        public string Period { get; set; }
        public int NumericPeriod { get; set; }
        public DateTime Date { get; set; }
        public decimal Price { get; set; }
    }
}